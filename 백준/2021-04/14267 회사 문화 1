import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {    
	
	static int n,m;
	static ArrayList<Integer>[] list;
	static boolean[] visit;
	static int[] arr;
    
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        st = new StringTokenizer(br.readLine()," ");
        n = Integer.parseInt(st.nextToken());
        m = Integer.parseInt(st.nextToken());
 
        list = new ArrayList[n+1];
        arr = new int[n+1];
        visit = new boolean[n+1];
        
       for(int i = 1; i <= n; i++) {
    	   list[i] = new ArrayList<>();
       }
        
        st = new StringTokenizer(br.readLine()," ");
        for(int i = 1; i <= n; i++) {
        	int a = Integer.parseInt(st.nextToken());
        	
        	if(a != -1) {
        		list[a].add(i);
        	}
        	
        }
        
        for(int i = 0; i < m; i++) {
        	st = new StringTokenizer(br.readLine()," ");
        	int a = Integer.parseInt(st.nextToken());
        	int b = Integer.parseInt(st.nextToken());
        	
        	arr[a] += b;
        }
        
        dfs(1,0);
        
        StringBuilder sb = new StringBuilder();
        for(int i=1; i<=n; i++)
            sb.append(arr[i]).append(' ');

        System.out.println(sb);
        
    }
    
    public static void dfs(int idx, int value) {
    	
    	visit[idx] = true;
    	arr[idx] += value;
    	
    	for(int next : list[idx]) {
    		if(!visit[next]) {
    			dfs(next,arr[idx]);
    		}
    	}
    }
	
}
