import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;
 
public class Main {
	
	static int n,m;
	static int[] dx = {0,0,1,-1};
	static int[] dy = {1,-1,0,0};
	static int[][] map;
	static boolean[][] check;
	static boolean cnt;
	 
	
    public static void main(String[] args) throws IOException {
    		
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	n = Integer.parseInt(st.nextToken());
    	m = Integer.parseInt(st.nextToken());
    	
    	map = new int[n][m];
    	check = new boolean[n][m];
    	
    	for(int i = 0; i < n; i++) {
    		String s = br.readLine();
    		for(int j=0; j < m; j++) {
    			map[i][j] = Integer.parseInt(s.substring(j,j+1));
    			
    		}
    		
    	}
    	
    	
    	
    	for(int i = 0; i < m; i++) {
    		if(map[0][i] == 0) {
    			dfs(0,i);

    		}
    		
    	}
    	
    	if(cnt == true) {
    		System.out.println("YES");
    	}else {
    		System.out.println("NO");
    	}
  
    	
    }
    
    public static void dfs(int x, int y) {
    	
    	map[x][y] = 1;
    	
    	if(x == n-1) {
    	
    		cnt = true;
    		return ;
    	}
    	
    	
    	
    	for(int i = 0; i < 4; i++) {
    		
    		int nx = x + dx[i];
        	int ny = y + dy[i];
    		

    		if(nx >= 0 && ny >= 0 && nx < n && ny < m && map[nx][ny] == 0) {
    			
    			dfs(nx,ny);
    			
    		
    		}
    		
    		
    	}
    	
    	
    	
    }
    
   
   
 
}
