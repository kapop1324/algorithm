import java.io.*;
import java.util.*;

public class Main {
  
	static int[][] map;
	static boolean[] number;
	static ArrayList<int[]> list;
	
    public static void main(String[] args) throws IOException {
       
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	
    	map = new int[9][9];
    	list = new ArrayList<>();
    	
    	for(int i = 0; i < 9; i++) {
    		String s = br.readLine();
    		for(int j = 0; j < 9; j++) {
    			map[i][j] = s.charAt(j) -'0';
    			if(map[i][j] == 0) {
    				list.add(new int[] {i,j});
    			}
    			
    		}
    	}
    
    	
    	dfs(0);
    	
    	for(int i = 0; i < 9; i++) {
    		for(int j = 0; j < 9; j++) {
    			System.out.print(map[i][j]);
    		}
    		System.out.println();
    	}
    	
    	
    	
    }
    
    public static void check(int idx) {
    	
    
    	
    	
    	
    }
    
    public static boolean rowcheck(int idx, int value) {
    	
    	for(int i = 0; i < 9; i++) {
        	if(map[list.get(idx)[0]][i] == value) {
        		return false;
        	}
    		
    		
    	}
    	
    	return true;
    }
    
	public static boolean colcheck(int idx, int value) {
		for(int i = 0; i < 9; i++) {
        	if(map[i][list.get(idx)[1]] == value) {
        		return false;
        	}
    		
    		
    	}
	    	return true;
	    }
	
	public static boolean boxcheck(int idx, int value) {
		
		int a = list.get(idx)[0] %3;
    	int b = list.get(idx)[1] %3;
    	
    	int start_x = 0;
    	int end_x = 0;
    	int start_y = 0;
    	int end_y = 0;
    	
    	if(a == 0) {
    		start_x = list.get(idx)[0];
    		end_x = list.get(idx)[0]+2;
    	}else if(a == 1) {
    		start_x = list.get(idx)[0]-1;
    		end_x = list.get(idx)[0]+1;
    		
    	}else if(a == 2) {
    		start_x = list.get(idx)[0] -2;
    		end_x = list.get(idx)[0];
    	}
    	
    	if(b == 0) {
    		start_y = list.get(idx)[1];
    		end_y = list.get(idx)[1]+2;
    	}else if(b == 1) {
    		start_y = list.get(idx)[1]-1;
    		end_y = list.get(idx)[1]+1;
    		
    	}else if(b == 2) {
    		start_y = list.get(idx)[1] -2;
    		end_y = list.get(idx)[1];
    	}
    	
    	for(int i = start_x; i <= end_x; i++) {
    		for(int j = start_y; j <= end_y; j++) {
    			
    				if(map[i][j] == value) {
    					return false;
    				}
    				
    				
    				
    		}
    		
    	}
		
		return true;
	}
    
    public static boolean dfs(int idx){
    	
    	if(idx == list.size()) {
    		return true;
    	}
    	
    	check(idx);
    	
    	for(int i = 1; i < 10; i++) {
    		if(rowcheck(idx,i) && colcheck(idx, i) && boxcheck(idx, i)) {
    			
    			map[list.get(idx)[0]][list.get(idx)[1]] = i;
    			if(dfs(idx+1) == true) {
    				return true;
    			}
    			map[list.get(idx)[0]][list.get(idx)[1]] = 0;
    			
    		}
    	}
    	
    	
    	
    	return false;
    	
    }
    	
    	
    


    
}
