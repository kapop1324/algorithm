import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;



class Main {
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringBuilder sb = new StringBuilder();
		
		LinkedList<Integer> q = new LinkedList<Integer>();
		
		int n = Integer.parseInt(br.readLine());
		
		StringTokenizer st;
		
		for(int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine()," ");
			
			switch (st.nextToken()) {
			case "push":
				q.offer(Integer.parseInt(st.nextToken()));
				break;
			case "pop":
				Integer a = q.poll();
				if(a == null) {
					sb.append(-1+"\n");
				}
				else {
					sb.append(a+"\n");
				}
				break;
			case "size":
				sb.append(q.size()+"\n");
				break;
			case "empty":
				if(q.isEmpty()) {
					sb.append(1+"\n");
				}
				else {
					sb.append(0+"\n");
				}		
				break;
			case "front":
				if(q.peek() == null) {
					sb.append(-1+"\n");
				}
				else {
					sb.append(q.peek()+"\n");
				}
				break;
			case "back":
				if(q.peekLast() == null) {
					sb.append(-1+"\n");
				}
				else {
					sb.append(q.peekLast()+"\n");
				}
				break;
			
			}
			
			
			
		}
		
		System.out.println(sb);
		
	}

}
