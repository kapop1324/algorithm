import java.io.*;
import java.util.*;

public class Main {
  
	static char[] arr;
	static boolean[] check;
	static char[] result;
	static int l,c;
	static int a,b;
	static LinkedHashSet<String> list;
	
    public static void main(String[] args) throws IOException {
       
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	 
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	
    	l  = Integer.parseInt(st.nextToken());
    	c = Integer.parseInt(st.nextToken());
    	list = new LinkedHashSet<>();
    	arr = new char[c];
    	check = new boolean[c];
    	result = new char[l];
    	st = new StringTokenizer(br.readLine()," ");
    	for(int i = 0; i < c; i++) {
    		arr[i] = st.nextToken().charAt(0);
    	}
    	
    	Arrays.sort(arr);
    	
    	dfs(0);
    	
    	list.forEach(System.out::println);
    
    	
    	
    }
    
    public static boolean search(char[] c) {
    	
    	int q = 0;
    	int w = 0;
    	
    	for(int i =0; i < c.length; i++) {
    		if(c[i] == 'a' || c[i] == 'e' || c[i] == 'o' || c[i] == 'i' || c[i] == 'u') {
    			q++;
    		}
    		else {
    			w++;
    		}
    	}
    	
    	
    	if(q > 0 && w > 1) {
    		return true;
    	}
    	else {
    		return false;
    	}
    	
    	
    }
    
    public static void dfs(int idx) {
    	
    	if(idx == l) {
    		if(search(result)) {
    			for(int i = 0; i < l; i++) {
    				System.out.print(result[i]);
    			}
    			System.out.println();
    		}
    		
    		return;
    	}
    	
    	
    	for(int i = idx; i < c; i++) {
    		
    		if(check[i] == false) {
    			if(idx  == 0 || result[idx-1] < arr[i]) {
    				check[i] = true;
        			result[idx] = arr[i];
        			dfs(idx+1);
        			check[i] = false;
    			}
    			
    		}
    		
    		
    		
    	}
    	
    	
    }
    

    
}
