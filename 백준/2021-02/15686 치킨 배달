import java.util.*;
import java.util.stream.Collector.Characteristics;



import java.io.*;

		public class Main {
		    
		  
		    static List<int[]> home;
		    static List<int[]> chicken;
		    static boolean[] check;
		    static int[] arr;
		    static int n, m;
		    static int ans = Integer.MAX_VALUE;
		    public static void main(String[] args) throws IOException {
		       
		    	Scanner sc = new Scanner(System.in);
		    	
		      
		         n = sc.nextInt();
		         m = sc.nextInt();
		    	
		    	home = new ArrayList<>();
		    	chicken = new ArrayList<>();
		    	
		    	for(int i = 0; i <n; i++) {
		    		
		    		for(int j = 0; j < n; j++) {
		    			 int a = sc.nextInt();
		    			 if (a == 1) {
		                     home.add(new int[]{i,j});
		                 }else if (a == 2) {
		                     chicken.add(new int[]{i,j});
		                 }
		    		
		    		}
		    	}
		    	
		    	
		    	
		    		check = new boolean[chicken.size()];
		    		
		    		dfs(0,0);
		    	
		    	System.out.println(ans);
		 
		   
		}
		    
		   public static void dfs(int idx, int cnt) {
			   
			  
			   
			   if(cnt == m) {
				   
				  
					  int sum = 0;
				 
				  for(int i = 0; i < home.size(); i++) {
					 
					  int min = Integer.MAX_VALUE;
						  
						  for(int j = 0; j < check.length; j++) {
							  if(check[j] == true)
								  min = Math.min(min, Math.abs(home.get(i)[0] - chicken.get(j)[0]) + Math.abs(home.get(i)[1]- chicken.get(j)[1]));
							  
						  }
						  
							  sum += min;
					  
				  }
					 ans = Math.min(ans, sum);
				   return;
			   }
			   
			   for(int i = idx; i < check.length; i++) {
				  
				   if(check[i] == false) {
					   check[i] = true;
					   dfs(i+1,cnt+1);
					   check[i] = false;
				   }
					  
					   
				   
				 
				   
			   }
			   
		   }
	

}
