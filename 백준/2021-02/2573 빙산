import java.util.*;
import java.util.stream.Collector.Characteristics;



import java.io.*;

		public class Main {
		    
		  
		  static int[][] map;
		  static int[][] map2;
		  static boolean[][] check;
		  static int cnt, year;
		  static int n, m;
		  static int[] dx = {1,-1,0,0};
		  static int[] dy = {0,0,-1,1};
		  
		    public static void main(String[] args) throws IOException {
		       
		    	Scanner sc = new Scanner(System.in);
		    	
		    	n = sc.nextInt();
		    	m = sc.nextInt();
		    	map = new int[n][m];
		    	map2 = new int[n][m];
		    	
		    	
		    	cnt = 0;
		    	year = 0;
		    	for(int i = 0; i < n; i++) {
		    		for(int j = 0; j < m ; j++) {
		    			map[i][j] = sc.nextInt();
		    			
		    		
		    		}
		    	}
		    	
		    
		    	check = new boolean[n][m];
		    while(true) {
		    		
		    	
		    		
		    		
		    		
		    		cnt = 0;
		    		int sum = 0;
		  
		    		for(int i = 0; i < n; i++) {
			    		for(int j = 0; j < m ; j++) {
			    			sum += map[i][j];
			    			if(check[i][j] == false && map[i][j] != 0) {
			    				cnt++;
			    				dfs(i,j);
			    			}
			    			
			    			
			    		}
			    	}
		    		
		    		if(cnt == 0) {
		    			System.out.println(0);
		    			break;
		    		}
		    		else if(cnt >= 2) {
		    			System.out.println(year);
		    			break;
		    		} 
		    		year();
		    		year++;
		    		
		    		

		    	}
		}
		   public static void year() {
			   
			  for(int i = 0; i < n; i++) {
				  for(int j = 0; j < m; j++) {
					  map[i][j] -= map2[i][j];
					  
					  if(map[i][j] <0) {
						  map[i][j] = 0;
					  }
						  check[i][j] = false;
						  map2[i][j] = 0;
					  
				  }
			  }
			
			 
		   }
		    
		   public static void dfs(int x, int y) {
			  
			   
			   check[x][y] = true;
			   int z = 0;
			   for(int i = 0; i < 4; i++) {
				   int nx = x + dx[i];
				   int ny = y + dy[i];
				   
				   if(map[nx][ny]==0) {
					   map2[x][y]++;
				   }
				   
				   if(check[nx][ny] == false && map[nx][ny] != 0) {
					   dfs(nx,ny);
				   }
				   
			   }
			   
			   
		   }
	

}
