import java.io.*;
import java.util.*;






public class Main {
	
	public static int[][] map;
	public static int[]cnt = new int[3];
	public static int n;

	
    public static void main(String args[]) throws IOException {
    	
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	
    	n = Integer.parseInt(br.readLine());
    	map = new int[n][n];
    	
    	for(int i =0; i<n; i++) {
    		int y = 0;
    		
    		StringTokenizer st = new StringTokenizer(br.readLine());
    		
    		while(st.hasMoreTokens()) {
    			map[i][y++] = Integer.parseInt(st.nextToken());
    		}
    		
    	}
    	
    	solve(0,0,n);
    	
    	System.out.println(cnt[0]);
    	System.out.println(cnt[1]);
    	System.out.println(cnt[2]);
    	
    
    	
    }
   
    public static void solve(int row, int col, int n) {
    	
    	if(check(row, col , n)) {
    		cnt[map[row][col]+1]++;
    	}
    	else {
    		for(int i = 0 ; i<3; i++) {
    			for(int j =0; j<3; j++) {
    				solve(row+(n/3*i),col+(n/3*j),n/3);
    			}
    		}
    	}
    }
 
    public static boolean check(int r, int c, int n) {
    	
    	int std = map[r][c];
    	
    	for(int i = r; i < n+r; i++) {
    		for(int j = c; j < c+n; j++) {
    			if(std != map[i][j]) {
    				return false;
    			}
    		}
    	}
    	
    	
    	return true;
    }
}



