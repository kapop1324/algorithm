import java.io.*;
import java.util.*;






public class Main {
	
	static int n,m;
	static int[][] arr;
	static int[] dx = {0,0,1,-1,1,1,-1,-1};
	static int[] dy = {1,-1,0,0,1,-1,1,-1};
	static int cnt = 0;
	
	
    public static void main(String args[]) throws IOException {
    	
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	StringTokenizer st;
    	
    	st = new StringTokenizer(br.readLine()," ");
    	
    	n = Integer.parseInt(st.nextToken());
    	m = Integer.parseInt(st.nextToken());
    	
    	arr = new int[n][m];
    	
    	for(int i = 0; i < n; i++) {
    		st = new StringTokenizer(br.readLine(), " ");
    		for(int j = 0; j < m; j++) {
    			arr[i][j] = Integer.parseInt(st.nextToken());
    		}
    	}
	    
    	for(int i = 0; i < n; i++) {
    		for(int j = 0; j < m ; j++) {
    			if(arr[i][j] == 1) {
    				arr[i][j] = 0;
    				dfs(i,j);
    				cnt++;
    			}
    		}
    	}
    	
    	
    	System.out.println(cnt);
    	
    }
    
  
    public static void dfs(int x, int y) {
    	
    	
    	
    	int nx = 0;
    	int ny = 0;
    	
    	for(int i = 0; i < 8; i++) {
    		
    		nx = x + dx[i];
    		ny = y+ dy[i];
    		
    		if(nx >= 0 && ny >= 0 && nx < n && ny < m && arr[nx][ny] == 1) {
    			arr[nx][ny] = 0;
    			dfs(nx,ny);
    		}
    		
    		
    	}
    	
    
    }
   
   
}


