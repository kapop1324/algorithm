import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class Main {
	
	public static int[] dx = {0,0,1,-1};
	public static int[] dy = {1,-1,0,0};

	
	public static int n, m;
	public static char[][] map;
	public static boolean[][] visit;
	public static boolean[] a;
	public static int max;
	public static ArrayList<Character> list;
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		 StringTokenizer st = new StringTokenizer(br.readLine()," ");
		
		 n = Integer.parseInt(st.nextToken());
		 m = Integer.parseInt(st.nextToken());
		 
		 map = new char[n][m];
		 visit = new boolean[n][m];
		 a = new boolean[26];
		 
		 max = 0;
		
		for(int i = 0; i < n; i++) {
			String s = br.readLine();
			for(int j = 0; j < m; j++) {
				map[i][j] = s.charAt(j);

			}
		}
		
	
			
				dfs(0,0,0);
			
		
		
				
		System.out.println(max);
		
		
	}
	
	public static void dfs(int x, int y, int cnt) {
		
		if(a[map[x][y]-'A'] == true) {

			max= Math.max(max, cnt);
	
			return;
		}
		
		
		for(int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			
			if(nx < 0 || ny < 0 || nx >= n || ny >= m) {
				continue;
			}
			a[map[x][y] - 'A'] = true;
				dfs(nx,ny,cnt+1);
			a[map[x][y] - 'A'] = false;
		}
		
		
	}
	
	
	
}
