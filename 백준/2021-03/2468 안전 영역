import java.io.*;
import java.util.*;

public class Main {
    
	static int[][] map;
	static boolean[][] check;
	static int[] dx = {0,0,1,-1};
	static int[] dy = {1,-1,0,0};
	static int n;
	static int day;
	static int max;
	static int cnt;
	
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        
        n = Integer.parseInt(br.readLine());
        max = Integer.MIN_VALUE;
        StringTokenizer st;
        
        map = new int[n][n];
        day = Integer.MIN_VALUE;
        
        for(int i = 0; i < n; i++) {
        	st = new StringTokenizer(br.readLine()," ");
        	for(int j = 0; j < n; j++) {
        		
        		map[i][j] = Integer.parseInt(st.nextToken());
        		day = Math.max(map[i][j], day);
        	}
        }
       
       
        for(int d = 1; d <= day; d++) {
        	
	        check = new boolean[n][n];
	        	
	       	 cnt = 0;
       	 
       	 for(int i = 0; i < n; i++) {
            	
            	for(int j = 0; j < n; j++) {
            		if(map[i][j] != 0 && check[i][j] == false) {
            			check[i][j] = true;
            			dfs(i,j);
            			cnt++;
            		}
            		
            		
            	}
            }
       
       	 island(d);
       	 
       	
       	 max = Math.max(max, cnt);
       	 
       
       	 
        	
        }

        System.out.println(max);
       

    }
    
    public static void island(int day) {
    	
    	 for(int i = 0; i < n; i++) {
          	
          	for(int j = 0; j < n; j++) {
          		if(map[i][j] == day) {
          			map[i][j] = 0;
          		}
          		
          		
          	}
          }
    }
    
    public static void dfs(int x, int y) {
    	
    	for(int i = 0; i < 4; i++) {
    		int nx = x + dx[i];
    		int ny = y + dy[i];
    		
    		if(nx >= 0 && ny >= 0 && nx < n && ny < n) {
    			if(map[nx][ny] != 0 && check[nx][ny] == false) {
    				check[nx][ny] = true;
    				dfs(nx,ny);
    			}
    			
    		}
    		
    	}
    	
    	
    }
}
