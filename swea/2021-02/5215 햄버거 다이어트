import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;
    
class Solution
{
    static int n;
    static int limit;
    static int[] taste;
    static int[] calorie;
    static int max;
     
    public static void main(String[] args) {
         
        Scanner sc = new Scanner(System.in);
         
        int tc = sc.nextInt();
         
        for(int t = 1; t <= tc; t++) {
             
            n = sc.nextInt();
            limit = sc.nextInt();
            taste = new int[n];
            calorie = new int[n];
            max = 0;
             
            for (int i = 0; i < n; i++) {
                 
                taste[i] = sc.nextInt();
                calorie[i] = sc.nextInt();
                 
            }
             
            dfs(1<<n);
             
            System.out.println("#" + t + " " + max);
        }
         
    }
     
    public static void dfs(int flag) {
         
        for(int i = 0; i < flag; i++) {
             
            int sum = 0;
            int cal = 0;
            for(int j = 0; j < n; j++) {
                if((i & 1 << j) != 0) {
                    sum += taste[j];
                    cal += calorie[j];
                }
            }
            if(cal > limit) {
                continue;
            }else {
                max = Math.max(max,sum);
            }
             
        }
     
         
    }
}
