import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;
import java.util.Stack;
 
   
class Solution
{
    static int[][] arr;
    static LinkedList<int[]> list;
    static int n;
    //상 하 좌 우 좌상 우상 좌하 우하
    static int[] dx = {-1,1,0,0,-1,-1,1,1};
    static int[] dy = {0,0,-1,1,-1,1,-1,1};
     
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
          
        int tc = sc.nextInt();
        
        for(int t = 1; t<=tc; t++) {
           n = sc.nextInt();
           int m = sc.nextInt();
           int b_count = 0;
           int w_count = 0;
            
           arr = new int[n+2][n+2];
            
           arr[n/2][n/2] = 2;
           arr[n/2][n/2+1] =1;
            
           arr[n/2+1][n/2] =1;
           arr[n/2+1][n/2+1] = 2;
          
            
           
           for(int i = 0; i < m; i++) {
                
               int x = sc.nextInt();
               int y = sc.nextInt();
               int color = sc.nextInt();
                
               if(color == 1) {
                   arr[x][y] = 1;
               }
               else if(color == 2) {
                   arr[x][y] = 2;
               }
                
               change(x,y,color);
               
           }
           
           for(int i = 0; i < n+2; i++) {
               for(int j = 0; j < n+2; j++) {
                  if(arr[i][j] == 1) {
                      b_count++;
                  }
                  else if(arr[i][j] == 2) {
                      w_count++;
                  }
               }
                
           }
           
        System.out.println("#"+t+" "+b_count+" "+w_count);
               
             
             
        }
           
            
    }
     
    public static void change(int x, int y, int color) {
         
        int nx, ny;
     
         
        if(x == 0 || y == 0 || x > n || y > n) {
            return;
        }
         
        for(int i = 0; i < 8; i++) {
            nx = x;
            ny = y;
            list = new LinkedList<>();
            while(true) {
                 
                nx += dx[i];
                ny += dy[i];
                 
                if(nx == 0 || ny == 0 || nx == n+1 || ny == n+1) {
                    list.clear();
                   break;
                }
                 
                if(arr[nx][ny] == 0) {
                     
                    break;
                }
                 
                if(arr[nx][ny] != color) {
                    list.add(new int[] {nx,ny});
                     
                }
                 
                if(arr[nx][ny] == color) {
                         
                            for(int j = 0; j <list.size(); j++) {
                                arr[list.get(j)[0]][list.get(j)[1]] = color;
                                 
                            }
                         
                        break;
                     
                }
                 
                  
                 
            }
        }
     
    }
      
}
