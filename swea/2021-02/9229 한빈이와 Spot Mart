import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
  
public class Solution {
    public static int n, limit, max;
    public static int[] arr;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder("");
        StringTokenizer st;
          
        int T = Integer.parseInt(br.readLine());
        for (int tc = 1; tc <= T; tc++) {
            max = -1;
              
            st = new StringTokenizer(br.readLine(), " ");
            n = Integer.parseInt(st.nextToken());
            limit = Integer.parseInt(st.nextToken());
              
            arr = new int[n];
              
            st = new StringTokenizer(br.readLine(), " ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(st.nextToken());
            }
              
            combination(0, 0, 0);
              
            sb.append("#").append(tc).append(" ").append(max).append("\n");
        }
        System.out.println(sb);
    }
      
    public static void combination(int cnt, int start, int sum) {
        if (cnt == 2) {
            if (sum <= limit) {
                max = (max > sum) ? max : sum;
            }
                  
            return;
        }
          
        for (int i = start; i < n; i++) {
            combination(cnt + 1, i + 1, sum + arr[i]);
        }
    }
}
